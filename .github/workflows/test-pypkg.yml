name: Test OpenBTMixing Python Package
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  #####----- FULL TESTING WITHOUT COVERAGE
  test_pypkg:
    runs-on: ${{ matrix.os }}
    env:
      EIGEN_PATH: ${{ github.workspace }}/eigen
      INSTALL_PATH: ${{ github.workspace }}/local
    strategy:
      matrix:
        os: [macos-latest]
        mpi_impl: ["openmpi"]
        python-version: ["3.9"]

    steps:
    #####----- SETUP TESTING ENVIRONMENT
    - name: Checkout OpenBTMixing
      uses: actions/checkout@v4
    - name: Install autotools
      run: |
        brew install autoconf
        brew install autoconf-archive
        brew install automake
        brew install libtool
    - name: Install ${{ matrix.mpi_impl }}
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: ${{ matrix.mpi_impl }}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Setup Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        # For building wheel only
        python -m pip install build
        python -m pip install delocate
    - name: Install eigen dependency
      run: |
        # C++ Header only => no build here! 
        git clone https://gitlab.com/libeigen/eigen.git $EIGEN_PATH

    #####----- BUILD WHEEL FROM SCRATCH & INSTALL
    - name: Build OpenBTMixing C++ CLTs & Libraries
      run: |
        export CPATH=$EIGEN_PATH
        echo " "
        echo "Log Software Environment"
        echo "-------------------------------------------------"
        echo "CC=$CC"
        echo "CXX=$CXX"
        echo "MPICC=$MPICC"
        echo "MPICXX=$MPICXX"
        echo "CPATH=$CPATH"
        echo " "
        which mpicc
        mpicc -show
        echo " "
        which mpicxx
        mpicxx -show
        echo " "
        glibtoolize --version
        aclocal --version
        automake --version
        autoconf --version
        echo " "
        echo "Setting up build system"
        echo "-------------------------------------------------"
        pushd ${{ github.workspace }}/src
        echo "libtoolizing ..."
        glibtoolize
        echo "aclocalizing ..."
        aclocal
        echo "automaking ..."
        automake --add-missing
        echo "autoconfing ..."
        autoconf
        echo " "
        echo "Configure OpenBT"
        echo "-------------------------------------------------"
        ./configure --with-mpi --with-silent --prefix=$INSTALL_PATH
        echo " "
        echo "Make & install OpenBT CLTs"
        echo "-------------------------------------------------"
        make clean install
        popd

    ##-- Run full test suite
    # Prefer full end-to-end test of binary wheels rather than testing in
    # local clone alone
    #
    # This also confirms that the test script is functional
    - name: Run full OpenBtMixing test suite
      run: |
        echo " "
        which python
        which pip
        python --version
        echo " "
        python -c "import platform ; print(platform.machine())"
        python -c "import platform ; print(platform.system())"
        python -c "import platform ; print(platform.release())"
        python -c "import platform ; print(platform.platform())"
        python -c "import platform ; print(platform.version())"
        python -c "import platform ; print(platform.mac_ver())"
        echo " "
        ${{ github.workspace }}/tools/build_macos_wheel.sh
        echo " "
        echo "Install final binary wheel"
        echo "-------------------------------------------------"
        python -m pip install openbtmixing-*.whl
        echo " "
        pip list
        echo " "
        echo "Test installed package"
        echo "-------------------------------------------------"
        ${{ github.workspace }}/tools/test_python_installation.py
