name: Build Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Debug
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            echo "Current directory: $(pwd)"
            cd src
            ls
            cat configure.ac
            autoconf --version
            aclocal --version
            automake --version
          fi
          if [ "${{ matrix.os }}" == "macos-11" ]; then
            cd src/m4
            echo "Current directory: $(pwd)"
            ls
          fi
        shell: bash
      - name: Install dependencies
        run: |
          if [ "${{ matrix.os }}" == "windows-2022" ]; then
            choco install -y make
          fi
          if [ "${{ matrix.os }}" == "macos-11" ]; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
          python -m pip install -U pip
          pip install cibuildwheel
          pip install -r requirements.txt
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.2.tar.gz
            tar -xvf ./openmpi-4.0.2.tar.gz
            ./openmpi-4.0.2/configure --prefix="/home/${USER}/.openmpi"
            make -j
            make install
          fi
          if [ "${{ matrix.os }}" == "macos-11" ]; then
            brew install open-mpi
          fi
          cd src
          git clone --branch 3.4 --depth 1 https://gitlab.com/libeigen/eigen.git
          mv eigen eigenall
          mv eigenall/Eigen Eigentemp
          mv Eigentemp Eigen
          ls -F
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            export PATH=${PATH}:/home/${USER}/.openmpi/bin/
            export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/${USER}/.openmpi/lib/
            echo ${PATH}
            echo ${LD_LIBRARY_PATH}
            aclocal
            libtoolize
          else
            ln -sf /usr/local/share/aclocal/lt~obsolete.m4 /Users/runner/work/OpenBT/OpenBT/src/m4/lt~obsolete.m4
            ln -sf /usr/local/share/aclocal/ltsugar.m4 /Users/runner/work/OpenBT/OpenBT/src/m4/ltsugar.m4
            ln -sf /usr/local/share/aclocal/ltoptions.m4 /Users/runner/work/OpenBT/OpenBT/src/m4/ltoptions.m4
            ln -sf /usr/local/share/aclocal/ltversion.m4 /Users/runner/work/OpenBT/OpenBT/src/m4/ltversion.m4
            ln -sf /usr/local/share/aclocal/libtool.m4 /Users/runner/work/OpenBT/OpenBT/src/m4/libtool.m4
            aclocal
            brew install libtool
            ln -s /usr/local/bin/glibtoolize /usr/local/bin/libtoolize
            libtoolize
          fi
          automake --add-missing
          autoconf
          ./configure --with-mpi --with-silent
          make
        shell: bash

      - name: Build wheels
        run: |
          mkdir dist
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            pip wheel . -w /home/runner/work/OpenBT/OpenBT/dist
          else
            pip wheel . -w /Users/runner/work/OpenBT/OpenBT/dist
            mv /Users/runner/work/OpenBT/OpenBT/dist/openbtmixing-1.0.1-py3-none-any.whl /Users/runner/work/OpenBT/OpenBT/dist/openbtmixing-1.0.1-py3-cp38-macosx_11_0_x86_64.whl 
          fi
        shell: bash 
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
  
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build sdist
        run: python builddist.py sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
      - build-wheels
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/openbtmixing
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist/
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/      