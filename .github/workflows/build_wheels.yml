name: Build Wheels

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Debug
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            echo "Current directory: $(pwd)"
            cd src
            ls
            cat configure.ac
            autoconf --version
            aclocal --version
            automake --version
          fi
          if [ "${{ matrix.os }}" == "macos-11" ]; then
            cd src/m4
            echo "Current directory: $(pwd)"
            ls
          fi
        shell: bash
      - name: Install dependencies
        run: |
          if [ "${{ matrix.os }}" == "windows-2022" ]; then
            choco install -y make
          fi
          if [ "${{ matrix.os }}" == "macos-debug" ]; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
          python -m pip install -U pip
          pip install cibuildwheel
          pip install -r requirements.txt
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.2.tar.gz
            tar -xvf ./openmpi-4.0.2.tar.gz
            ./openmpi-4.0.2/configure --prefix="/home/${USER}/.openmpi"
            make -j
            make install
          fi
          if [ "${{ matrix.os }}" == "macos-debug" ]; then
            brew install open-mpi
          fi
          cd src
          git clone --branch 3.4 --depth 1 https://gitlab.com/libeigen/eigen.git
          mv eigen/Eigen Eigentemp
          mv Eigentemp Eigen
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            export PATH=${PATH}:/home/${USER}/.openmpi/bin/
            export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/home/${USER}/.openmpi/lib/
            echo ${PATH}
            echo ${LD_LIBRARY_PATH}
            aclocal
          else
            cd m4
            echo "Current directory: $(pwd)"
            ls -l
            cd ..
            export ACLOCAL_PATH="/usr/share/aclocal/:$ACLOCAL_PATH"
            aclocal -I /Users/runner/work/OpenBT/OpenBT/src/m4 --verbose
          fi
          libtoolize
          automake --add-missing
          autoconf
          ./configure --with-mpi --with-silent
          make
        shell: bash

      - name: Build wheels
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-20.04" ]; then
            pip wheel . -w /home/runner/work/OpenBT/OpenBT/wheelhouse
            mv /home/runner/work/OpenBT/OpenBT/wheelhouse/openbtmixing-0.1-py3-none-any.whl /home/runner/work/OpenBT/OpenBT/wheelhouse/openbtmixing-0.1-py3-ubuntu-20.04.whl
          else
            pip wheel . -w /home/runner/work/OpenBT/OpenBT/wheelhouse
            mv /home/runner/work/OpenBT/OpenBT/wheelhouse/openbtmixing-0.1-py3-none-any.whl /home/runner/work/OpenBT/OpenBT/wheelhouse/openbtmixing-0.1-py3-macos11.whl 
          fi
        shell: bash 
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse
