title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,25), sig2_hat = sig2_hat4)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
detach(ex1_data)
attach(ex1_data)
nu = 5
q = 0.95
true_sig2 = 0.25^2
sig2_hat1 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,median))
lambda1 = sig2_hat1*qchisq(1-q,nu)/nu
sig2_hat2 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda2 = sig2_hat2*qchisq(1-q,nu)/nu
sig2_hat3 = max(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda3 = sig2_hat3*qchisq(1-q,nu)/nu
sig2_hat4 = as.vector(var(y_train))
lambda4 = sig2_hat4*qchisq(1-q,nu)/nu
cv = matrix(0, nrow = 2, ncol = 4)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,2.5), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,4), ', sig2_hat = ', round(sig2_hat2,4))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.001), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.25), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,25), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
detach(ex1_data)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,2.5), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.001), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.25), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,25), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
attach(ex1_data)
nu = 5
q = 0.95
true_sig2 = 0.25^2
sig2_hat1 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,median))
lambda1 = sig2_hat1*qchisq(1-q,nu)/nu
sig2_hat2 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda2 = sig2_hat2*qchisq(1-q,nu)/nu
sig2_hat3 = max(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda3 = sig2_hat3*qchisq(1-q,nu)/nu
sig2_hat4 = as.vector(var(y_train))
lambda4 = sig2_hat4*qchisq(1-q,nu)/nu
cv = matrix(0, nrow = 2, ncol = 4)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,2.5), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.0008), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.05), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,25), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
detach(ex1_data)
lambda2
5/3*lambda2
attach(ex1_data)
nu = 5
q = 0.95
true_sig2 = 0.25^2
sig2_hat1 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,median))
lambda1 = sig2_hat1*qchisq(1-q,nu)/nu
sig2_hat2 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda2 = sig2_hat2*qchisq(1-q,nu)/nu
sig2_hat3 = max(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda3 = sig2_hat3*qchisq(1-q,nu)/nu
sig2_hat4 = as.vector(var(y_train))
lambda4 = sig2_hat4*qchisq(1-q,nu)/nu
cv = matrix(0, nrow = 2, ncol = 4)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,2.5), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.0002), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.05), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,25), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
detach(ex1_data)
#plot prior variance - sigma2
plot_prior_sig2 = function(n, nu, lam, sig2_hat = NULL, x_lim = NULL, y_lim = NULL, title = NULL){
#Generate prior
prior_sig2 = rinv_scaled_chi2(n,nu,lam)
p_ord = order(prior_sig2)
#Prior mean, mode
pm = nu*lam/(nu-2)
pmode = round(nu*lam/(nu+2),4)
#Get Density and order
#ds = density(prior_sig2)
ds = dinv_scaled_chi2(prior_sig2, nu, lam)
ds = ds[p_ord]
prior_sig2 = prior_sig2[p_ord]
#Get limits and title
if(is.null(x_lim)){x_lim = c(min(prior_sig2), max(prior_sig2))}
if(is.null(title)){
lam = ifelse(round(lam, 4)==0, round(lam, 8), round(lam, 4))
pm = ifelse(round(pm, 4)==0, round(pm, 8), round(pm, 4))
title = paste0('Prior Distribution of Sigma2 \n (nu = ',nu, ', lam = ',lam,', mean = ', pm,')')
}
if(is.null(y_lim)){y_lim = c(0, max(ds))}
#Plot the prior
plot(prior_sig2, ds, xlab = 'Sigma2', ylab = 'density', main = title, panel.first = {grid(col = 'lightgrey')},
xlim = x_lim, ylim = y_lim, type = 'l')
abline(v = pm, col = 'red', lty = 'dashed')
if(!is.null(sig2_hat)){
abline(v = sig2_hat, col = 'blue', lty = 'dashed')
}
legend('topright',legend = c('Mean', 'Sig2_hat'), col = c('red', 'blue'), pch = 16, cex = 0.8)
}
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.0002), sig2_hat = sig2_hat2, title = title)
cv = data.frame(cv)
colnames(cv) = paste('Prior', 1:4)
rownames(cv) = c('Sig2.hat','Sig2.True')
cv %>% mutate_all(round, 4) %>% mutate_all(function(x) ifelse(x==0, '0', x)) %>%
kable(align = rep('c',4)) %>% kable_styling(full_width = FALSE) %>%
add_header_above(c('Estimated Coverage Probabilities' = 5)) %>%
kable_classic(html_font = 'Cambria')
ex2_data = get_data(20,300,0.005,2,4,0.03,0.5,12345,FALSE)
attach(ex2_data)
nu = 3
q = 0.95
true_sig2 = 0.25^2
sig2_hat1 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,median))
lambda1 = sig2_hat1*qchisq(1-q,nu)/nu
sig2_hat2 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda2 = sig2_hat2*qchisq(1-q,nu)/nu
sig2_hat3 = max(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda3 = sig2_hat3*qchisq(1-q,nu)/nu
sig2_hat4 = as.vector(var(y_train))
lambda4 = sig2_hat4*qchisq(1-q,nu)/nu
cv = matrix(0, nrow = 2, ncol = 4)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,2.5), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.0002), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.05), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,25), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
detach(ex2_data)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,0.001), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.00005), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.0005), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,0.0005), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,0.01), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.00005), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.0005), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,0.05), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,0.01), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.000005), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.0005), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,0.0001), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.00001), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.00005), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
attach(ex2_data)
nu = 3
q = 0.95
true_sig2 = 0.25^2
sig2_hat1 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,median))
lambda1 = sig2_hat1*qchisq(1-q,nu)/nu
sig2_hat2 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda2 = sig2_hat2*qchisq(1-q,nu)/nu
sig2_hat3 = max(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda3 = sig2_hat3*qchisq(1-q,nu)/nu
sig2_hat4 = as.vector(var(y_train))
lambda4 = sig2_hat4*qchisq(1-q,nu)/nu
cv = matrix(0, nrow = 2, ncol = 4)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,0.01), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.000005), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.000025), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,0.001), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
detach(ex2_data)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,0.01), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,0.03), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
sig2_hat4
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,0.035), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
attach(ex2_data)
nu = 3
q = 0.95
true_sig2 = 0.25^2
sig2_hat1 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,median))
lambda1 = sig2_hat1*qchisq(1-q,nu)/nu
sig2_hat2 = min(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda2 = sig2_hat2*qchisq(1-q,nu)/nu
sig2_hat3 = max(apply(apply(f_train, 2, function(x) (x-y_train)^2),2,min))
lambda3 = sig2_hat3*qchisq(1-q,nu)/nu
sig2_hat4 = as.vector(var(y_train))
lambda4 = sig2_hat4*qchisq(1-q,nu)/nu
cv = matrix(0, nrow = 2, ncol = 4)
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,0.01), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.000005), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.000025), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,0.035), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
detach(ex2_data)
true_sig2 = 0.005^2
true_sig2
sig2_hat1
sig2_hat2
par(mfrow = c(2,2), oma = c(0,0,2,0))
title = paste0('Min.Median',' - lambda = ', round(lambda1,4), ', sig2_hat = ', round(sig2_hat1,4))
plot_prior_sig2(10000,nu,lambda1, x_lim = c(0,0.051), sig2_hat = sig2_hat1, title = title)
cv[1,1] = coverage_prob_sig2(10000, nu, lambda1, sig2_hat1)
cv[2,1] = coverage_prob_sig2(10000, nu, lambda1, true_sig2)
title = paste0('Min.Min',' - lambda = ', round(lambda2,6), ', sig2_hat = ', round(sig2_hat2,6))
plot_prior_sig2(10000,nu,lambda2, x_lim = c(0,0.00001), sig2_hat = sig2_hat2, title = title)
cv[1,2] = coverage_prob_sig2(10000, nu, lambda2, sig2_hat2)
cv[2,2] = coverage_prob_sig2(10000, nu, lambda2, true_sig2)
title = paste0('Max.Min',' - lambda = ', round(lambda3,4), ', sig2_hat = ', round(sig2_hat3,4))
plot_prior_sig2(10000,nu,lambda3, x_lim = c(0,0.000025), sig2_hat = sig2_hat3, title = title)
cv[1,3] = coverage_prob_sig2(10000, nu, lambda3, sig2_hat3)
cv[2,3] = coverage_prob_sig2(10000, nu, lambda3, true_sig2)
title = paste0('Sample.Var',' - lambda = ', round(lambda4,4), ', sig2_hat = ', round(sig2_hat4,4))
plot_prior_sig2(15000,nu,lambda4, x_lim = c(0,0.0375), sig2_hat = sig2_hat4, title = title)
cv[1,4] = coverage_prob_sig2(10000, nu, lambda4, sig2_hat4)
cv[2,4] = coverage_prob_sig2(10000, nu, lambda4, true_sig2)
mtext("Prior Distribution of Sigma2 -- nu = 5", outer = TRUE, cex = 1.25)
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,20, length = 0.5)
q_grid[1]
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, pch = 16, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')})
mult_grid
nu_grid = seq(3,20, length = 0.5)
nu_grid
nu_grid = seq(3,20, by = 0.5)
nu_grid
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, pch = 16, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')})
plot(nu_grid, mult_grid, pch = 16, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='o')
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,50, by = 0.5)
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, pch = 16, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='o', col = col_list[1], ylim = c(0,1))
for(i in 2:3){
mult_grid = qchisq(1-q_grid[i],nu_grid)/nu_grid
points(nu_grid, mult_grid, pch = 16, col = col_list[i])
lines(nu_grid, mult_grid, col = col_list[i])
}
paste('q =', q_grid)
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,50, by = 0.5)
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, pch = 16, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='o', col = col_list[1], ylim = c(0,1))
for(i in 2:3){
mult_grid = qchisq(1-q_grid[i],nu_grid)/nu_grid
points(nu_grid, mult_grid, pch = 16, col = col_list[i])
lines(nu_grid, mult_grid, col = col_list[i])
}
legned('bottomright', col = col_list, pch = 16, legend = paste(q_grid), title = 'q values')
legend('bottomright', col = col_list, pch = 16, legend = paste(q_grid), title = 'q values')
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,50, by = 0.5)
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, pch = 16, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='o', col = col_list[1], ylim = c(0,1))
for(i in 2:3){
mult_grid = qchisq(1-q_grid[i],nu_grid)/nu_grid
points(nu_grid, mult_grid, pch = 16, col = col_list[i])
lines(nu_grid, mult_grid, col = col_list[i])
}
legend('bottomright', col = col_list, pch = 16, legend = paste(q_grid), title = 'q values')
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,100, by = 0.5)
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, pch = 16, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='o', col = col_list[1], ylim = c(0,1), cex = 0.9)
for(i in 2:3){
mult_grid = qchisq(1-q_grid[i],nu_grid)/nu_grid
points(nu_grid, mult_grid, pch = 16, col = col_list[i], cex = 0.9)
lines(nu_grid, mult_grid, col = col_list[i])
}
legend('bottomright', col = col_list, pch = 16, legend = paste(q_grid), title = 'q values')
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,100, by = 0.5)
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='l', col = col_list[1], ylim = c(0,1))
for(i in 2:3){
mult_grid = qchisq(1-q_grid[i],nu_grid)/nu_grid
points(nu_grid, mult_grid, pch = 16, col = col_list[i], cex = 0.9)
lines(nu_grid, mult_grid, col = col_list[i])
}
legend('bottomright', col = col_list, pch = 16, legend = paste(q_grid), title = 'q values')
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,100, by = 0.5)
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='l', col = col_list[1], ylim = c(0,1), lwd = 2)
for(i in 2:3){
mult_grid = qchisq(1-q_grid[i],nu_grid)/nu_grid
points(nu_grid, mult_grid, pch = 16, col = col_list[i], cex = 0.9)
lines(nu_grid, mult_grid, col = col_list[i])
}
legend('bottomright', col = col_list, pch = 16, legend = paste(q_grid), title = 'q values')
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,100, by = 0.5)
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='l', col = col_list[1], ylim = c(0,1), lwd = 2)
for(i in 2:3){
mult_grid = qchisq(1-q_grid[i],nu_grid)/nu_grid
#points(nu_grid, mult_grid, pch = 16, col = col_list[i], cex = 0.9)
lines(nu_grid, mult_grid, col = col_list[i])
}
legend('bottomright', col = col_list, pch = 16, legend = paste(q_grid), title = 'q values')
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,100, by = 0.5)
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, pch = 16, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='o', col = col_list[1], ylim = c(0,1), cex = 0.9)
for(i in 2:3){
mult_grid = qchisq(1-q_grid[i],nu_grid)/nu_grid
points(nu_grid, mult_grid, pch = 16, col = col_list[i], cex = 0.9)
lines(nu_grid, mult_grid, col = col_list[i])
}
legend('bottomright', col = col_list, pch = 16, legend = paste(q_grid), title = 'q values')
q_grid = c(0.90, 0.95, 0.99)
nu_grid = seq(3,100, by = 0.5)
col_list = c('darkorange2', 'dodgerblue1', 'darkorchid1')
mult_grid = qchisq(1-q_grid[1],nu_grid)/nu_grid
plot(nu_grid, mult_grid, pch = 16, xlab = 'nu', ylab = 'multiplier', main = 'Multiplier vs. nu',
panel.first = {grid(col = 'lightgrey')}, type='o', col = col_list[1], ylim = c(0,1), cex = 0.8)
for(i in 2:3){
mult_grid = qchisq(1-q_grid[i],nu_grid)/nu_grid
points(nu_grid, mult_grid, pch = 16, col = col_list[i], cex = 0.8)
lines(nu_grid, mult_grid, col = col_list[i])
}
legend('bottomright', col = col_list, pch = 16, legend = paste(q_grid), title = 'q values')
qnorm(0,0,1)
qnorm(0.5,0,1)
qchisq(0.1,2)
qchisq(0.1,10)
setwd("/home/johnyannotty/Documents/Open BT Project SRC")
# Load the R wrapper functions to the OpenBT library.
source("/home/johnyannotty/Documents/Open BT Project SRC/openbt.R")
source('/home/johnyannotty/Documents/Model Mixing BART/Model Mixing R Code/physics expansion r functions.R')
source('/home/johnyannotty/Documents/Model Mixing BART/Model Mixing R Code/Model Mixing BART Prior Functions.R')
source('/home/johnyannotty/Documents/Model Mixing BART/Model Mixing R Code/Model Mixing BART Score Functions.R')
ex_data = get_data(20,300,0.005,2,4,0.03,0.5,321, random_x = FALSE)
plot_exp(ex_data$x_test,2,4, y_lim = c(1.8,3.0))
points(ex_data$x_train,ex_data$y_train, pch = 16, cex = 0.8)
ex_data$x_train = as.matrix(ex_data$x_train, ncol = 1)
ex_data$x_test = as.matrix(ex_data$x_test, ncol = 1)
K = ncol(ex_data$f_train)
attach(ex_data)
knitr::opts_chunk$set(echo = FALSE)
setwd("/home/johnyannotty/Documents/Model Mixing BART")
source('Model Mixing R Code/physics expansion r functions.R')
source('Model Mixing R Code/Model Mixing BART Prior Functions.R')
library(kableExtra)
#Get the grid of points
g_grid = seq(0.03, 0.5, length = 300)
par(mfrow = c(1,3), oma = c(0,0,2,0))
plot_exp(g_grid, 2, 4, y_lim = c(0.5,4.5), leg_pos = 'bottomleft', title = "(a)")
plot_exp(g_grid, 4,4, y_lim = c(0.5,4.5), leg_pos = 'bottomleft', title = "(b)")
plot_exp(g_grid, c(2,4,6), NULL, y_lim = c(0.5,4.5), leg_pos = 'bottomleft', title = "(c))")
mtext("EFT Expansion Models", outer = TRUE, cex = 1.25)
